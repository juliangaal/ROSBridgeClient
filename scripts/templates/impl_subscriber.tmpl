//
// Created by Julian on 14.10.18.
//

#include <ros_bridge_client/subscriber/{header_name}.h>
#include <ros_bridge_client/utils/response_converter.h>

using namespace ros_bridge_client::subscriber;

{class_name}::{class_name}(ROSBridgeClient &wsc, std::string topic, size_t buffer_size)
  : RBCSubscriber<{type}>(wsc, topic, "{ros_msg_type}/{ros_msg_name}", buffer_size)
{{}}

void {class_name}::addMessage(const web::json::value &json_msg)
{{
  const auto& msg = conversions::responseTo{ros_msg_name}Message(json_msg);

  if (messages.size() >= buffer_size)
  {{
    messages.pop();
    messages.push(msg);
    return;
  }}

  messages.push(msg);
  std::cout << getTopic() << " subscriber received: " << msg.toString() << "\n";
}}